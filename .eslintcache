[{"/Users/code0101/Documents/Development/github/react-toasts-messages/src/components/ToastMessage.jsx":"1","/Users/code0101/Documents/Development/github/react-toasts-messages/src/App.js":"2"},{"size":1910,"mtime":1608271113125,"results":"3","hashOfConfig":"4"},{"size":1829,"mtime":1608271116858,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1buhcsj",{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/code0101/Documents/Development/github/react-toasts-messages/src/components/ToastMessage.jsx",["10"],"/Users/code0101/Documents/Development/github/react-toasts-messages/src/App.js",[],{"ruleId":"11","severity":1,"message":"12","line":15,"column":13,"nodeType":"13","endLine":17,"endColumn":11},"react-hooks/exhaustive-deps","Assignments to the 'toastId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression"]